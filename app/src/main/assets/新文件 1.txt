1、handler 消息机制
	

2、flutter 更新ui 方式
3、事件分发机制


4、内存优化

5、http和https的区别
	HTTP：是一个客户端和服务器端请求和应答的标准（TCP），用于从WWW服务器传输超文本到本地浏览器的传输协议
	HTTPS：是HTTP的安全版，HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。
	HTTPS和HTTP的区别主要如下：
　　	1、https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。
　　	2、http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。
　　	3、http端口是80 https的端口是443
　　	4、http的连接，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。


Handler 
	1、为什么要用Handler消息传递机制
		多个线程并发更新UI的同时保证线程安全
		
		
		
Threadlocl是一个关于创建线程局部变量的类
	使用ThreadLocl创建的变量只有当前线程可以访问 一般情况下其它线程无法访问
	android中Looper就是利用ThreadLocl这一特性保证每个线程只存在一个looper对象的
	
	
OOM
	
	
	
Handler
	1、为什么要使用Handler?
		因为在子线程中无法更新UI 需要使用Handler机制来把消息发送到主线程

	 handler 
	 Looper
	 MessageQueue
	 Message
	 
	1、请求发送到哪去了？
		sendEmptyMessage -》sendEmptyMessageDelayed-》sendMessageDelayed -》sendMessageAtTime(其他semdMessage方法最终都会调用sendMessageAtTime方法)-》enqueueMessage-》MessageQueue.enqueueMessage
	2、请求是怎么处理的？
		ActivityThread的main方法-》Looper.loop()-》msg.target.enqueueMessage
	3、Handler,Looper,MessageQueue,Message,是什么时候创建的？
		handler在使用时new出来的
		Looper是在ActivityThread-》main方法-》Looper.prepareMainLooper调用prepare()-》ThreadLocl.set(new Looper())
		MessageQueue是在Looper的构造方法中被创建出来的 
		
		
		
Handler是怎么持有MessageQueue对象的？


MessageQueue是一个单链表结构 非线性，非顺序的物理结构，由n个节点组成
链表采用的是，见缝插针 的存储方式，不要求内存连续，靠next指针关联起来
存储方式属于随机存储，访问方式是顺序访问
	
		